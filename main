
#include "Bank.h"
#include <iostream>
#include <cstdlib>
#include <string>
#include <fstream>
#include <string>
#include "aes.h"
#include "modes.h"
#include "filters.h"
#include "files.h"
#include "osrng.h"
#include "hex.h"
#include <sstream>
#include "cryptlib.h"
#include "rijndael.h"
#include <sstream>
using namespace CryptoPP;
using namespace std;

//int pin, pin2;
//double amount;
//string userName;
//
//
// 
// 

#include "Bank.h"

int main()
{
    AutoSeededRandomPool prng;

    // Create a new bank
    Bank* bank = new Bank();

    // Add some accounts to the bank
    bank->addAccount("Alice", 123456, 1000);
    bank->addAccount("Bob", 654321, 2000);
    bank->addAccount("Charlie", 987654, 3000);

    // Encrypt and write the accounts to a file
    bank->EncryptAndWriteToFile(prng);

    // Clear the bank
 
        // Other parts of your main function...

        // Generate or load key and iv (you need to save these during encryption)
        SecByteBlock key(AES::DEFAULT_KEYLENGTH);
        prng.GenerateBlock(key, key.size());

        SecByteBlock iv(AES::BLOCKSIZE);
        prng.GenerateBlock(iv, iv.size());

      //  Bank bankInstance;

        // ... (other parts of your main function)

        // When decrypting, use the same key and iv used during encryption
       // bank->DecryptFromFile(prng, key, iv);

        // ... (rest of your main function)

        return 0;
    





    // Decrypt the accounts from the file
   // bank->DecryptFromFile(prng);

    // Verify login credentials
    if (bank->loginVerify(bank, "Alice", 1234))
    {
        cout << "Login successful!" << endl;
    }
    else
    {
        cout << "Login failed." << endl;
    }

    // Free memory
    delete bank;

    return 0;
}






//void mainMenu(Bank& bankk, string userName, int pin) {
//    //Bank::Account acc;
//    unsigned short choice2;
//    double balance = 0;
//
//
//    do
//    {
//        /*enters to bank main menu */
//        cout << "\nPress a number for transactions:\n(1)View account details\n(2)Deposit\n(3)Withdraw\n(4)DeleteAccount\n (5)TransferMoney\n(6)Quit\n";
//        cin >> choice2;
//
//        /*view account details*/
//        if (choice2 == 1) {//done
//            bankk.BalanceDisplay(userName);
//            cout << "*************************************************";
//        }
//        /*deposit*/
//        else if (choice2 == 2) {//done
//            cout << "Enter the amount: ";
//            cin >> amount;
//            //balance = acc.getBalance();
//            unsigned short accN = bankk.findAccount(userName, pin);
//            bankk.deposit(accN, amount);
//            cout << "Updated data after the transaction:\n";
//            bankk.BalanceDisplay(userName);
//            cout << "*************************************************";
//
//        }
//        /*withdraw*/
//        else if (choice2 == 3)
//        {
//            cout << "Enter the amount";
//            cin >> amount;
//            //balance = acc.getBalance();
//            unsigned short accN = bankk.findAccount(userName, pin);
//            bankk.withdraw(accN, amount);
//            cout << "Updated data after the transaction:\n";
//            bankk.BalanceDisplay(userName);
//            cout << "*************************************************";
//        }
//        /*delete account*/
//        else if (choice2 == 4)
//        {
//            //delete account   by using implemented functions 
//            unsigned short accN = bankk.findAccount(userName, pin);
//            bankk.deleteAccount(accN);
//            if (bankk.findAccount(userName, pin) == 0)
//                cout << "Account deleted successfully";
//            // cout << bankk.findAccount(userName, pin)<<endl;
//
//        }
//
//        else if (choice2 == 5)
//        {
//
//            cout << "Enter account number you want to transfer" << endl;
//            unsigned short num;
//            cin >> num;
//            cout << "Enter the Amount" << endl;
//            double Amount;
//            cin >> Amount;
//            unsigned short accN = bankk.findAccount(userName, pin);
//            bankk.TransferMoney(accN, num, Amount);
//        }
//        else  cerr << "Invalid Input";
//
//    } while (choice2 != 6);
//    bankk.EncryptAndWriteToFile(bankk.prng);
//    exit(0);
//
//}
//
//
//
//
//int main()
//{
//
//    //A varaiable = addaccount, as it returns the acc number!!!!>>>>
//    Bank bank1;
//    Bank::Account acc;
//
//    /*string s = "123.9";
//    double num = stod(s);
//    cout << num;
//   */
//
//    unsigned short choice1, choice2 = 0, count = 0, count2 = 0;
//    int pin, pin2;
//    double amount;
//    string userName;
//    bank1.DecryptFromFile(bank1.prng);
//
//
//    cout << "Press\n (1)Sign in.\t(2)Sign up.\n";
//    cin >> choice1;
//
//
//    /*LogIn*/
//    if (choice1 == 1)
//    {
//
//        while (count < 5)
//        {
//            /*checking for entered username and pin*/
//            cout << "Enter your name:\n";
//            cin >> userName;
//            // getline(cin,userName);
//            cout << "Enter the pin:";
//            cin >> pin;
//            acc.setPin(pin);
//            int pinn = acc.getPin();
//            count++;
//
//
//            if (bank1.loginVerify(&bank1, userName, pinn) == true)
//            {
//                mainMenu(bank1, userName, pin);
//
//            }
//            else
//                cerr << "Invalid username or password. Try again\n"; /*5 times*/
//        }
//        if (count > 5)
//        {
//            cerr << "Exceeded number of Logging in mistakes";
//            exit(1);
//        }
//
//    }
//
//    /*SignUp*/
//    else if (choice1 == 2)
//    {
//        bank1.DecryptFromFile(bank1.prng);
//        cout << "Welcome! pleaser enter your name:";
//        cin >> userName;
//        cout << "Enter the  amount of money you want to keep:";
//        cin >> amount;
//        do
//        {
//            count2++;
//            if (count2 > 1) {
//                cerr << "you entered different pins!Try again\n";
//            }
//            cout << "enter your pin:";
//            cin >> pin;
//            cout << "enter your pin again:";
//            cin >> pin2;
//
//
//        } while (pin != pin2);
//
//
//        bank1.addAccount(userName, amount, pin);
//        mainMenu(bank1, userName, pin);
//
//
//        /*call add account fn*/
//      /* (****note that pin shouldn't be less that 7 digits and numbers only****)*/
//    }
//
//
//
//    //reasoning for user when he chosses a number that is not in the main menu 
//    else if (choice1 != 1 || choice1 != 2)
//    {
//        cerr << "Invalid Input, Quitting";
//        exit(1); //to flag invalid choices from the user 
//    }
//
//    return 0;
//
//}
//
//
//
//
